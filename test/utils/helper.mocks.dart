// Mocks generated by Mockito 5.4.4 from annotations
// in aak_signup/test/utils/helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:aak_signup/data/remote_data_source/remote_data_source.dart'
    as _i8;
import 'package:aak_signup/domain/entities/custom_failure.dart' as _i6;
import 'package:aak_signup/domain/entities/result.dart' as _i5;
import 'package:aak_signup/domain/entities/signup_entity.dart' as _i2;
import 'package:aak_signup/domain/repositories/user_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSignUpEntity_0 extends _i1.SmartFake implements _i2.SignUpEntity {
  _FakeSignUpEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i3.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.Result<_i6.CustomFailure, _i2.SignUpEntity>> signup(
          _i2.SignUpEntity? signupEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [signupEntity],
        ),
        returnValue:
            _i4.Future<_i5.Result<_i6.CustomFailure, _i2.SignUpEntity>>.value(
                _i7.dummyValue<_i5.Result<_i6.CustomFailure, _i2.SignUpEntity>>(
          this,
          Invocation.method(
            #signup,
            [signupEntity],
          ),
        )),
      ) as _i4.Future<_i5.Result<_i6.CustomFailure, _i2.SignUpEntity>>);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i8.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.SignUpEntity> signup(_i2.SignUpEntity? signupEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [signupEntity],
        ),
        returnValue: _i4.Future<_i2.SignUpEntity>.value(_FakeSignUpEntity_0(
          this,
          Invocation.method(
            #signup,
            [signupEntity],
          ),
        )),
      ) as _i4.Future<_i2.SignUpEntity>);
}
